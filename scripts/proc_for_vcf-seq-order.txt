IN BASH...

First, grep for CHROM in the .vcf file and use tr to go from one gigantic line to a list:
	# this was based on advice from Carolyn that the header (starting with CHROM) had the necessary info)

	grep CHROM allhqSNPmm80.recode.vcf | tr [:space:] '\n' > [INTERMEDIATE-FILE]
		# the '\n' is for a new line

Then, I went into [INTERMEDIATE-FILE] and manually deleted the top few lines before the list of sequence numbers

Then, cut out just the SRR numbers...

	cut -d '/' -f9 vcf_chrom_head.txt | cut -d '.' -f1 > vcf_seq_order.txt
		# the first part cuts out the [SRR-num].nodups.bam
		# the second part cuts out just the [SRR-number] and saves it to a new file


IN R....

	seq_order = read.csv("vcf_seq_order.txt",sep='\n',header=F)
	seq_order$index = seq(1:47)
	
	Supp_tab_1 <- read.csv("supp_table_1.csv", na.strings = c("n.a.","")) #read in original supp. table file

	Supp_tab_1_single <- subset.data.frame(Supp_tab_1, Supp_tab_1$Colonization_Status == "single")
	  # remove any samples with colonization status of "multiple" or "incomplete"

	Supp_tab_1_47 <- subset.data.frame(Supp_tab_1_single, Supp_tab_1_single$total_reads < 80000000)
	  # remove the 2 samples with 10x the total reads

	colnames(Supp_tab_1_47)[1] = "Sample_ID" #fix column name

	write.csv(Supp_tab_1_47, file = "supp_table_subset.csv",row.names = F) #write subsetted table

	poptab <- read.csv("supp_table_subset.csv") #load in the subsetted table

	poptab$index = NA
	for (i in 1:47){
  		for (k in 1:47){
    			if(poptab$NCBI_SRA_Accesion[i]==seq_order$V1[k]){
      				poptab$index[i] = seq_order$index[k]
    			}
  		}
	}

	poptab_ordered = poptab[order(poptab$index),]

Then I saved this new file onto Poseidon (with the index column, so you can double check that it looks OK!)

